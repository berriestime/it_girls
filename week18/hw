1.  localStorage - хранит данные бессрочно, объемом до 5МБ;
    sessionStorage - хранит данные текущей сессии;
    cookie - можно передавать на сервер, не более 4 Кбайт, их можно защищать.;
    Если нужно хранить много данных надолго, то лучше всего использовать localStorage, ну или передавать на сервер через cookie.
2.  setItem('key', 'value') - добавить значение из веб-хранилища;
    getItem('key') - получить значение из веб-хранилища;
3.  - Запомнить какую тему он выбрал(светлую или темную);
    - Сохранить текст введенного, но не отправленного сообщения;
    - Сохранить данные карты;
4.  Валидацию кредитной карты можно сделать например при помощи регулярки или используя специальные библиотеки:
```
    /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$/
```
5?.  input который принимает только 2 числа:
    let re  = /^\d{2}$/;
    re.test('12'); //true
6. Регулярное выражение для ФИО на русском языке.
    function handle() {
        let fio = document.getElementById('fio');
        fio.value = fio.value.replace(/[^А-Яа-яЁё ]/g, "");
    }
    let input = document.getElementById('fio');
    input.onkeydown = input.onkeyup = input.onkeypress = handle;

    <input type="text" id="fio" />
7.  Невалидное поле можно обвести красным и добавить рядом подсказку что от него хотят.
    Для этого можно использовать: 
    - атрибут input="type", required, pattern, max/minlength;
    - псевдоклассы: :valid, :invalid, :required, :optional;
    - специальный объект JS validity;
8.  К недостаткам стандартного способа валидации через HTML можно отнести:
    - type="tel" используется только для автозаполения, он не валидирует телефонные номера;
    - minlength не поддерживается в браузерах IE, EDGE, в iOS только с версии 10.3;
    - псевдоклассы :valid :invalid :required :optional применяются до того, как пользователь начнет работу с формой;